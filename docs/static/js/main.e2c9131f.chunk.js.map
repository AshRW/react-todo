{"version":3,"sources":["Todo.js","TodoList.js","App.js","random.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","completed","onChange","id","name","TodoList","todos","map","item","STORAGE_KEY","App","useState","setTodos","useEffect","fromLocalStorage","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","filter","onSubmit","e","preventDefault","inputTodoName","target","elements","addTodoInput","value","prev","Math","round","random","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"kKAEe,SAASA,EAAT,GAAmC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAKhC,OACI,8BACI,kCACA,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,UAAWC,SAPpC,WAChBJ,EAAWD,EAAKM,OAOXN,EAAKO,UCRH,SAASC,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,MAAOR,EAAa,EAAbA,WACrC,OACIQ,EAAMC,KAAI,SAAAC,GACN,OAAO,cAACZ,EAAD,CAAoBC,KAAMW,EAAMV,WAAYA,GAAjCU,EAAKL,OCFnC,IAAMM,EAAa,QAyDJC,MAvDf,WAKE,MAAwBC,mBAAS,IAAjC,mBAAOL,EAAP,KAAcM,EAAd,KACAC,qBAAU,WACR,IAAMC,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQT,IACtDK,GACDF,EAASE,KACX,IAEFD,qBAAU,WACRI,aAAaE,QAAQV,EAAaM,KAAKK,UAAUd,MAChD,CAACA,IAEJ,IAUMR,EAAW,SAACK,GAChB,IAAMkB,EAAQ,YAAOf,GACfT,EAAOwB,EAASC,MAAK,SAAAd,GAAI,OAAEA,EAAKL,KAAKA,KAC3CN,EAAKI,WAAWJ,EAAKI,UACrBW,EAASS,IAQX,OACE,qCACE,uCACA,cAAChB,EAAD,CAAUC,MAAOA,EAAMiB,QAAO,SAAAf,GAAI,OAAGA,EAAKP,aAAYH,WAAYA,IAClE,uBAAM0B,SA1BI,SAACC,GACbA,EAAEC,iBACF,IAAMC,EAAgBF,EAAEG,OAAOC,SAASC,aAAaC,MAElC,KAAhBJ,IACDf,GAAS,SAAAoB,GAAI,4BAAMA,GAAN,CAAY,CAAC7B,GC3BhB8B,KAAKC,MAAoB,IAAdD,KAAKE,UD2BW/B,KAAKuB,EAAe1B,WAAU,QACnEwB,EAAEG,OAAOC,SAASC,aAAaC,MAAM,OAoBrC,UACA,uBAAOhC,KAAK,OAAOK,KAAK,iBACxB,wBAAQL,KAAK,SAAb,yBAEA,wBAAQqC,QAbM,WAChB,IAAMf,EAAWf,EAAMiB,QAAO,SAAAf,GAAI,OAAGA,EAAKP,aAC1CW,EAASS,IAWP,mCACA,gCAAMf,EAAMiB,QAAO,SAAAf,GAAI,OAAGA,EAAKP,aAAWoC,OAA1C,gBACA,uBACA,iDACA,cAAChC,EAAD,CAAUC,MAAOA,EAAMiB,QAAO,SAAAf,GAAI,OAAEA,EAAKP,aAAYH,WAAYA,QEpDvEwC,IAASC,OAEL,cAAC,EAAD,IAGFC,SAASC,eAAe,W","file":"static/js/main.e2c9131f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo({todo, toggleTodo}) {\r\n    const handleToggle =()=>{\r\n        toggleTodo(todo.id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n            <input type=\"checkbox\" checked={todo.completed} onChange={handleToggle}/>\r\n            {todo.name}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({todos, toggleTodo}) {\r\n    return (\r\n        todos.map(item=>{\r\n            return <Todo key={item.id} todo={item} toggleTodo={toggleTodo}/>\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { uuid } from './random'\nimport TodoList from './TodoList'\n\nconst STORAGE_KEY ='todos'\n\nfunction App() {\n  // const fakeData=[\n  //   {id:1, name:\"Todo1\", completed:false},\n  //   {id:2, name:\"Todo2nd\", completed:false}\n  // ]\n  const [todos, setTodos]=useState([]);\n  useEffect(()=>{\n    const fromLocalStorage = JSON.parse(localStorage.getItem(STORAGE_KEY))\n    if(fromLocalStorage)\n      setTodos(fromLocalStorage)\n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  const addTodo=(e)=>{\n    e.preventDefault();\n    const inputTodoName = e.target.elements.addTodoInput.value;\n\n    if(inputTodoName!==''){\n      setTodos(prev=>[...prev, {id:uuid(), name:inputTodoName, completed:false}])\n      e.target.elements.addTodoInput.value=null;\n    }\n  }\n\n  const toggleTodo=(id)=>{\n    const newTodos = [...todos];\n    const todo = newTodos.find(item=>item.id===id);\n    todo.completed=!todo.completed;\n    setTodos(newTodos);\n  }\n\n  const clearTodos =()=>{\n    const newTodos = todos.filter(item=>!item.completed)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <h2>Todos</h2>\n      <TodoList todos={todos.filter(item=>!item.completed)} toggleTodo={toggleTodo}/>\n      <form onSubmit={addTodo}>\n      <input type=\"text\" name=\"addTodoInput\"/>\n      <button type='submit'>Add Todo</button>\n      </form>\n      <button onClick={clearTodos}>Clear Completed Todos</button>\n      <div>{todos.filter(item=>!item.completed).length} todo left</div>\n      <hr />\n      <h2>Completed Todos</h2>\n      <TodoList todos={todos.filter(item=>item.completed)} toggleTodo={toggleTodo}/>\n    </>\n  )\n}\n\nexport default App;\n","const uuid=()=> Math.round(Math.random()*1000)\r\n\r\nexport {\r\n    uuid\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}